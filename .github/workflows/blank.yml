# import requests

response = requests.get("https://api.github.com/users/jesus89/repos")

data = response.json()

for repo in data:
  if repo["name"] == "Sirius_Germany":
    comment = {
      "body": "westandforadriano",
      "path": "README.md",
      "sha": repo["default_branch"],
      "author": {
        "login": "adriano",
        "avatar_url": "https://avatars.githubusercontent.com/u/51750711?v=4",
      },
      "committer": {
        "login": "adriano",
        "avatar_url": "https://avatars.githubusercontent.com/u/51750711?v=4",
      },
    }

    response = requests.patch(
      f"https://api.github.com/repos/jesus89/{repo['name']}/contents/{comment['path']}",
      json=comment,
      headers={"Authorization": f"token {github_token}"},
    )

    if response.status_code == 200:
      print(f"Added the comment '{comment['body']}' to {repo['name']}.")
    else:
      print(f"Failed to add the comment to {repo['name']}.")
 is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
